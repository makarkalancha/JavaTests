<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=windows-1252"> 
  <title>Parsing a body fragment: jsoup Java HTML parser</title> 
  <meta name="keywords" content="parse, body, fragment, html"> 
  <meta name="description" content="Guide to parsing user-supplied HTML in Java, and keeping safe from cross-site scriping attacks."> 
  <link type="text/css" rel="stylesheet" href="Parsing_files/style.css">  
  <script src="Parsing_files/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
      var _gaq = _gaq || [];
      _gaq.push(['_setAccount', 'UA-89734-10']);
       _gaq.push(['_setDomainName', 'jsoup.org']);
      _gaq.push(['_trackPageview']);

      (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
      })();
    </script> 
 </head> 
 <body class="n1-cookbook"> 
  <div class="wrap"> 
   <div class="header"> 
    <div class="nav-sections"> 
     <ul> 
      <li class="n1-home"><h4><a href="http://jsoup.org/">jsoup</a></h4></li> 
      <li class="n1-news"><a href="http://jsoup.org/news/">News</a></li> 
      <li class="n1-bugs"><a href="http://jsoup.org/bugs">Bugs</a></li> 
      <li class="n1-discussion"><a href="http://jsoup.org/discussion">Discussion</a></li> 
      <li class="n1-download"><a href="http://jsoup.org/download">Download</a></li> 
      <li class="n1-api"><a href="http://jsoup.org/apidocs/">API Reference</a></li> 
      <li class="n1-cookbook"><a href="http://jsoup.org/cookbook/">Cookbook</a></li> 
      <li class="n1-try"><a href="http://try.jsoup.org/">Try jsoup</a></li> 
     </ul> 
    </div> 
   </div> 
   <div class="breadcrumb"> 
    <a href="http://jsoup.org/">jsoup</a> 
    <span class="seperator">»</span> 
    <a href="http://jsoup.org/cookbook/">Cookbook</a> 
    <span class="seperator">»</span> 
    <a href="http://jsoup.org/cookbook/input/">Input</a> 
    <span class="seperator">»</span> Parsing a body fragment 
   </div> 
   <div class="content"> 
    <div class="col1"> 
     <div class="recipe"> 
      <h1>Parsing a body fragment</h1> 
      <h2>Problem</h2> 
      <p>You have a fragment of body HTML (e.g. a <code>div</code> containing a couple of <code>p</code>
 tags; as opposed to a full HTML document) that you want to parse. 
Perhaps it was provided by a user submitting a comment, or editing the 
body of a page in a CMS.</p> 
      <h2>Solution</h2> 
      <p>Use the <code><a href="http://jsoup.org/apidocs/org/jsoup/Jsoup.html#parseBodyFragment%28java.lang.String%29" title="Parse a fragment of HTML, with the assumption that it forms the body of the HTML.">Jsoup.parseBodyFragment(String html)</a></code> method.</p> 
      <pre><code class="prettyprint"><span class="typ">String</span><span class="pln"> html </span><span class="pun">=</span><span class="pln"> </span><span class="str">"&lt;div&gt;&lt;p&gt;Lorem ipsum.&lt;/p&gt;"</span><span class="pun">;</span><span class="pln"><br></span><span class="typ">Document</span><span class="pln"> doc </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Jsoup</span><span class="pun">.</span><span class="pln">parseBodyFragment</span><span class="pun">(</span><span class="pln">html</span><span class="pun">);</span><span class="pln"><br></span><span class="typ">Element</span><span class="pln"> body </span><span class="pun">=</span><span class="pln"> doc</span><span class="pun">.</span><span class="pln">body</span><span class="pun">();</span></code></pre> 
      <h2>Description</h2> 
      <p>The <code>parseBodyFragment</code> method creates an empty shell document, and inserts the parsed HTML into the <code>body</code> element. If you used the normal <code><a href="http://jsoup.org/apidocs/org/jsoup/Jsoup.html#parse%28java.lang.String%29" title="Parse HTML into a Document.">Jsoup.parse(String html)</a></code>
 method, you would generally get the same result, but explicitly 
treating the input as a body fragment ensures that any bozo HTML 
provided by the user is parsed into the <code>body</code> element.</p> 
      <p>The <code><a href="http://jsoup.org/apidocs/org/jsoup/nodes/Document.html#body%28%29" title="Accessor to the document's body element.">Document.body()</a></code> method retrieves the element children of the document's <code>body</code> element; it is equivalent to <code>doc.getElementsByTag("body")</code>.</p> 
      <h2>Stay safe</h2> 
      <p>If you are going to accept HTML input from a user, you need to 
be careful to avoid cross-site scripting attacks. See the documentation 
for the <code><a href="http://jsoup.org/apidocs/org/jsoup/safety/Whitelist.html" title="Whitelists define what HTML (elements and attributes) to allow through the cleaner.">Whitelist</a></code> based cleaner, and clean the input with <code><a href="http://jsoup.org/apidocs/org/jsoup/Jsoup.html#clean%28java.lang.String,%20org.jsoup.safety.Whitelist%29" title="Get safe HTML from untrusted input HTML, by parsing input HTML and filtering it through a white-list of permitted tags and attributes.">clean(String bodyHtml, Whitelist whitelist)</a></code>.</p> 
     </div> 
    </div>
    <!-- /col1 --> 
    <div class="col2"> 
     <div class="toc box"> 
      <h2><a href="http://jsoup.org/cookbook"></a>Cookbook contents</h2> 
      <h3>Introduction</h3> 
      <ol start="1"> 
       <li><a href="http://jsoup.org/cookbook/introduction/parsing-a-document">Parsing and traversing a Document</a></li> 
      </ol> 
      <h3>Input</h3> 
      <ol start="2"> 
       <li><a href="http://jsoup.org/cookbook/input/parse-document-from-string">Parse a document from a String</a></li> 
       <li class="activePage">Parsing a body fragment</li> 
       <li><a href="http://jsoup.org/cookbook/input/load-document-from-url">Load a Document from a URL</a></li> 
       <li><a href="http://jsoup.org/cookbook/input/load-document-from-file">Load a Document from a File</a></li> 
      </ol> 
      <h3>Extracting data</h3> 
      <ol start="6"> 
       <li><a href="http://jsoup.org/cookbook/extracting-data/dom-navigation">Use DOM methods to navigate a document</a></li> 
       <li><a href="http://jsoup.org/cookbook/extracting-data/selector-syntax">Use selector-syntax to find elements</a></li> 
       <li><a href="http://jsoup.org/cookbook/extracting-data/attributes-text-html">Extract attributes, text, and HTML from elements</a></li> 
       <li><a href="http://jsoup.org/cookbook/extracting-data/working-with-urls">Working with URLs</a></li> 
       <li><a href="http://jsoup.org/cookbook/extracting-data/example-list-links">Example program: list links</a></li> 
      </ol> 
      <h3>Modifying data</h3> 
      <ol start="11"> 
       <li><a href="http://jsoup.org/cookbook/modifying-data/set-attributes">Set attribute values</a></li> 
       <li><a href="http://jsoup.org/cookbook/modifying-data/set-html">Set the HTML of an element</a></li> 
       <li><a href="http://jsoup.org/cookbook/modifying-data/set-text">Setting the text content of elements</a></li> 
      </ol> 
      <h3>Cleaning HTML</h3> 
      <ol start="14"> 
       <li><a href="http://jsoup.org/cookbook/cleaning-html/whitelist-sanitizer">Sanitize untrusted HTML (to prevent XSS)</a></li> 
      </ol> 
     </div> 
    </div>
    <!-- /col2 --> 
   </div>
   <!-- /content--> 
   <div class="footer"> 
    <b>jsoup HTML parser</b> © 2009 - 2013 
    <a href="http://jhy.io/" rel="author"><b>Jonathan Hedley</b></a> 
   </div> 
  </div>
  <!-- /wrap --> 
  <script src="Parsing_files/prettify.js"></script>
  <script>prettyPrint();</script> 
 <p style="text-align: justify;" class=""><span style="font-size: 10pt; font-family: Times New Roman;"><em>MyCause Water is a premium-bottled water with a social conscience. Our company donates per bottle sold, to a non-profit org of the consumer’s choice. We even take it one step further.&nbsp; At the end of each month we take all uncollected proceeds &amp; raffle them off to a registered 501(c)3 non-profit org. </em></span></p> <p class="" style="text-align: justify;"><span style="font-size: 10pt; font-family: Garamond;">Our water has won 3 industry-leading awards.<span> </span>The water won The Berkeley Springs International Water Tasting Festival Gold Award, for Non-Carbonated Water.<span> </span>It is natural spring water bottled at the source, filtered 9-times.<span> </span>The water has a natural pH of 7.4, 7 &amp; has 87 TDS.<span> </span>We were honored a 2nd time by, winning the 2012 People’s Choice Award, for Best Packaging &amp; Design at the Int'l Summit. Our 3rd award came from Beverage World Magazine. They awarded us their prestigious BevStar Gold Award, for the overall Water category.<span> <br></span></span></p> <p class="" style="text-align: justify;"><span style="font-size: 10pt; font-family: Garamond;"><span></span>Our bottle is square for environmental design.<span> </span>We are proud to be 100% USA made.<span> </span>Even our plastic is an upgraded plastic, which is 100% recyclable, has no BPA’s and no carcinogens.<span><br></span></span></p>
</body></html>