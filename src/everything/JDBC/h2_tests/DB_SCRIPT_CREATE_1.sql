CREATE SCHEMA FINANCE1;

CREATE TABLE FINANCE1.FAMILY_MEMBER(
ID identity,
NAME VARCHAR(65),
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);

CREATE TABLE FINANCE1.CURRENCY(
ID identity,
CODE VARCHAR(12) NOT NULL,
NAME VARCHAR(65),
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);

CREATE TABLE FINANCE1.ACCOUNT_GROUP(
ID identity,
NAME VARCHAR(65) NOT NULL,
TYPE CHAR(1) NOT NULL,--discriminator: CREDIT/DEBIT account group
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);


CREATE TABLE FINANCE1.ACCOUNT(
ID identity,
ACCOUNT_GROUP_ID BIGINT,
ACCOUNT_GROUP_TYPE CHAR(1) NOT NULL,--discriminator: CREDIT/DEBIT account group
CURRENCY_ID BIGINT,
NAME VARCHAR(65) NOT NULL,
DESCRIPTION VARCHAR(1024),
INITIAL_BALANCE DECIMAL(20,6) DEFAULT 0.00,
LIMIT DECIMAL(20,6) DEFAULT 0.00,
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
FOREIGN KEY (ACCOUNT_GROUP_ID) REFERENCES ACCOUNT_GROUP(ID),
FOREIGN KEY (ACCOUNT_GROUP_TYPE) REFERENCES ACCOUNT_GROUP(TYPE),
FOREIGN KEY (CURRENCY_ID) REFERENCES CURRENCY(ID)
);

CREATE TABLE FINANCE1.BILL_COIN_AMT(
ACCOUNT_ID BIGINT,
DATE DATE,
AMT_CENT1 SMALLINT 0,
AMT_CENT5 SMALLINT 0,
AMT_CENT10 SMALLINT 0,
AMT_CENT25 SMALLINT 0,
AMT_DOLLAR1 SMALLINT 0,
AMT_DOLLAR2 SMALLINT 0,
AMT_DOLLAR5 SMALLINT 0,
AMT_DOLLAR10 SMALLINT 0,
AMT_DOLLAR20 SMALLINT 0,
AMT_DOLLAR50 SMALLINT 0,
AMT_DOLLAR100 SMALLINT 0,
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
PRIMARY KEY (ACCOUNT_ID,DATE),
FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID)
);

CREATE TABLE FINANCE1.ACCOUNT_BALANCE(
ACCOUNT_ID BIGINT,
DATE DATE,
BALANCE DECIMAL(20,6) DEFAULT 0.00,
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
PRIMARY KEY (ACCOUNT_ID,DATE),
FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID)
);

CREATE TABLE FINANCE1.CATEGORY_GROUP(
ID identity,
TYPE CHAR(1) NOT NULL,--discriminator: CREDIT/DEBIT category group, i.e. expenses/income
NAME VARCHAR(65) NOT NULL,
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);


CREATE TABLE FINANCE1.CATEGORY(
ID identity,
CATEGORY_GROUP_ID BIGINT,
CATEGORY_GROUP_TYPE CHAR(1) NOT NULL,--discriminator: CREDIT/DEBIT account group
NAME VARCHAR(65) NOT NULL,
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
FOREIGN KEY (CATEGORY_GROUP_ID) REFERENCES CATEGORY_GROUP(ID),
FOREIGN KEY (CATEGORY_GROUP_TYPE) REFERENCES CATEGORY_GROUP(TYPE)
);

CREATE TABLE FINANCE1.ORGANIZATION(
ID identity,
NAME VARCHAR(65) NOT NULL,
DESCRIPTION VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);

--http://www.revenuquebec.ca/fr/entreprises/taxes/tpstvhtvq/reglesdebase/historiquetauxtpstvq.aspx
--https://fr.wikipedia.org/wiki/Taxe_de_vente_du_Qu%C3%A9bec
CREATE TABLE FINANCE1.TAX(
ID identity,
NAME VARCHAR(100) NOT NULL,
DESCRIPTION VARCHAR(512),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP
);

--load tax in a context class when app is starting to avoid query this table everytime
--put a listener in UI part if tax rate is changed then update in config file
--2 types of app: general and specific for Canada
CREATE TABLE FINANCE1.TAX_RATE(
ID identity,
TAX_ID BIGINT,
RATE DECIMAL(20,2) DEFAULT 0.00,
FORMULA VARCHAR(512),
DESCRIPTION VARCHAR(512),
STARTDATE TIMESTAMP DEFAULT '1970-01-01 00:00:00',
ENDDATE TIMESTAMP DEFAULT '2037-01-01 00:00:00',
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
FOREIGN KEY (TAX_ID) REFERENCES TAX(ID),
);

CREATE TABLE FINANCE1.INVOICE(
ID identity,
ORGANIZATION_ID BIGINT,
COMMENT VARCHAR(512),
CUSTOM1 DECIMAL(20,6) DEFAULT 0.00,
CUSTOM2 DECIMAL(20,6) DEFAULT 0.00,
BALANCE DECIMAL(20,6) DEFAULT 0.00,
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATION(ID)
);

CREATE TABLE FINANCE1.ITEM(
ID identity,
INVOICE_ID BIGINT,
CATEGORY_ID BIGINT,
TAX_ID BIGINT,
FAMILY_MEMBER_ID BIGINT,
DESCRIPTION1 VARCHAR(512) NOT NULL,
DESCRIPTION2 VARCHAR(512),
AMOUNT DECIMAL(20,6) DEFAULT 0.00,
COMMENT VARCHAR(512),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID),
FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY(ID),
FOREIGN KEY (TAX_ID) REFERENCES TAX(ID),
FOREIGN KEY (FAMILY_MEMBER_ID) REFERENCES FAMILY_MEMBER(ID)
);

CREATE TABLE FINANCE1.TRANSACTION(
ACCOUNT_ID BIGINT,
INVOICE_ID BIGINT,
DATE DATE,
DEBIT_AMOUNT DECIMAL(20,6) DEFAULT 0.00,
CREDIT_AMOUNT DECIMAL(20,6) DEFAULT 0.00,
COMMENT VARCHAR(512)
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
PRIMARY KEY (ACCOUNT_ID,INVOICE_ID,DATE),
FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT(ID),
FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID)
);

CREATE TABLE FINANCE1.CURRENCY_RATE(
SRC_CURRENCY_ID BIGINT,
DST_CURRENCY_ID BIGINT,
DATE DATE,
INVOICE_ID BIGINT,
RATE DECIMAL(20,6) DEFAULT 0.00,
COMMENT VARCHAR(1024),
T_CREATEDON TIMESTAMP,
T_UPDATEDON TIMESTAMP,
PRIMARY KEY (SRC_CURRENCY_ID,DST_CURRENCY_ID,DATE),
FOREIGN KEY (SRC_CURRENCY_ID) REFERENCES CURRENCY(ID),
FOREIGN KEY (DST_CURRENCY_ID) REFERENCES CURRENCY(ID),
FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE(ID)
);














