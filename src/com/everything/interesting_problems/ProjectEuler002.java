package com.everything.interesting_problems;

import java.util.ArrayList;
import java.util.List;

/**
 * User: Makar Kalancha
 * Date: 29/08/14
 * Time: 2:40 PM
 */


//Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//        1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.


public class ProjectEuler002 {
    public static void main(String[] args) {
//        List<Long> list = Fibanacci(4_000_000L);
//        for(long number : list){
//            System.out.println(number);
//        }
//
//        long sum = 0;
//        for(long fibanacciNum : list){
//            if(fibanacciNum%2 == 0 && fibanacciNum < 4_000_000L) {
//                sum += fibanacciNum;
//            }
//        }
//        System.out.println(">>>sum:"+sum);

        long N = 4_000_000L;
        for(long i = 0; i < N ; i++){
            System.out.println(Fibanacci_v1(i));
        }
    }

    public static long Fibanacci_v1(long numb) {
        if(numb <= 1) {
            return numb;
        }else {
            return Fibanacci_v1(numb - 1) + Fibanacci_v1(numb - 2);
        }
    }

    public static List<Long> Fibanacci(long max) {
        List<Long> list = new ArrayList<>();
        list.add(1l);
        list.add(2l);
        long last = list.get(list.size() - 1);
        for(int i = 1;last < max;i++) {
            long tmp = list.get(i) + list.get(i - 1);
            list.add(tmp);
            last = list.get(list.size() - 1);
        }
        return list;
    }
}
